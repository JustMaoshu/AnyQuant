-------------------------------------------------------------------------------
Test set: data.GetStockDataTest
-------------------------------------------------------------------------------
Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.002 sec <<< FAILURE!
getStockData_nameTest(data.GetStockDataTest)  Time elapsed: 0.001 sec  <<< ERROR!
java.lang.VerifyError: Instruction type does not match stack map
Exception Details:
  Location:
    data/GetStockData.getStockData_name(Ljava/lang/String;Ljava/lang/String;)Lpo/StockPO; @425: iload
  Reason:
    Type integer (current frame, locals[3]) is not assignable to '[Ljava/lang/String;' (stack map, locals[3])
  Current Frame:
    bci: @425
    flags: { }
    locals: { 'data/GetStockData', 'java/lang/String', 'java/lang/String', integer, integer, '[Ljava/lang/String;', 'java/util/GregorianCalendar', 'java/util/Date', 'java/text/SimpleDateFormat', 'java/lang/String', 'data/ReadData', 'java/lang/String', 'java/lang/String', 'java/lang/String', '[Ljava/lang/String;', 'po/StockPO', '[J', '[D', '[D', '[D', '[D', '[D', '[Ljava/lang/String;', '[D', '[D', '[D', integer }
    stack: { }
  Stackmap Frame:
    bci: @425
    flags: { }
    locals: { 'data/GetStockData', 'java/lang/String', 'java/lang/String', '[Ljava/lang/String;', 'java/util/Calendar', 'java/util/Date', 'java/text/SimpleDateFormat', 'java/lang/String', 'data/ReadData', 'java/lang/String', 'java/lang/String', 'java/lang/String', '[Ljava/lang/String;', 'po/StockPO', '[J', '[D', '[D', '[D', '[D', '[D', '[Ljava/lang/String;', '[D', '[D', '[D', integer }
    stack: { }
  Bytecode:
    0x0000000: 033e 11ff ff36 0412 0f11 0060 b800 152c
    0x0000010: 12c0 b600 c43a 0512 0f11 0061 b800 15bb
    0x0000020: 00c6 59b7 00c7 3a06 120f 1100 62b8 0015
    0x0000030: 1906 1905 0332 b800 cd19 0504 32b8 00cd
    0x0000040: 0464 1905 0532 b800 cdb6 00d3 120f 1100
    0x0000050: 63b8 0015 1906 1906 5708 04b6 00d7 120f
    0x0000060: 1100 64b8 0015 1906 b600 db3a 0712 0f11
    0x0000070: 0065 b800 15bb 00dd 5912 dfb7 00e1 3a08
    0x0000080: 120f 1100 66b8 0015 1908 1907 b600 e53a
    0x0000090: 0912 0f11 0068 b800 15bb 0022 59b7 0023
    0x00000a0: 3a0a 120f 1100 69b8 0015 bb00 2559 b700
    0x00000b0: 2612 28b6 002c 2bb6 002c 12e7 b600 2c2c
    0x00000c0: b600 2c12 e9b6 002c 1909 b600 2cb6 0030
    0x00000d0: 3a0b 120f 1100 6ab8 0015 190a 190b b600
    0x00000e0: 343a 0c12 0f11 006b b800 1519 0a19 0c12
    0x00000f0: 36b6 003a 3a0d 120f 1100 6cb8 0015 190a
    0x0000100: 190d 123c b600 403a 0e12 0f11 006d b800
    0x0000110: 15bb 0042 5904 b700 453a 0f12 0f11 006e
    0x0000120: b800 1504 bc0b 3a10 120f 1100 6fb8 0015
    0x0000130: 04bc 073a 1112 0f11 0070 b800 1504 bc07
    0x0000140: 3a12 120f 1100 71b8 0015 04bc 073a 1312
    0x0000150: 0f11 0072 b800 1504 bc07 3a14 120f 1100
    0x0000160: 73b8 0015 04bc 073a 1512 0f11 0074 b800
    0x0000170: 1504 bd00 473a 1612 0f11 0075 b800 1504
    0x0000180: bc07 3a17 120f 1100 76b8 0015 04bc 073a
    0x0000190: 1812 0f11 0077 b800 1504 bc07 3a19 120f
    0x00001a0: 1100 78b8 0015 0336 1a15 1a19 0ebe 1100
    0x00001b0: 783e 1100 0036 04a2 0123 1d11 0078 a000
    0x00001c0: 1915 0411 0000 a000 1112 0f1d 1504 04b8
    0x00001d0: 0051 11ff ff36 0412 0f11 0079 b800 1519
    0x00001e0: 0e15 1a32 b800 573a 1b12 0f11 007a b800
    0x00001f0: 1519 1015 1a19 1b12 59b6 005c b800 6250
    0x0000200: 120f 1100 7bb8 0015 1911 151a 191b 1264
    0x0000210: b600 5cb8 006a 5212 0f11 007c b800 1519
    0x0000220: 1215 1a19 1b12 6cb6 005c b800 6a52 120f
    0x0000230: 1100 7db8 0015 1913 151a 191b 126e b600
    0x0000240: 5cb8 006a 5212 0f11 007e b800 1519 1415
    0x0000250: 1a19 1b12 70b6 005c b800 6a52 120f 1100
    0x0000260: 7fb8 0015 1915 151a 191b 1272 b600 5cb8
    0x0000270: 006a 5212 0f11 0080 b800 1519 1615 1a19
    0x0000280: 1b12 74b6 005c 5312 0f11 0081 b800 1519
    0x0000290: 1715 1a19 1b12 76b6 005c b800 6a52 120f
    0x00002a0: 1100 82b8 0015 1918 151a 191b 1278 b600
    0x00002b0: 5cb8 006a 5212 0f11 0083 b800 1519 1915
    0x00002c0: 1a19 1b12 7ab6 005c b800 6a52 120f 1100
    0x00002d0: 78b8 0015 841a 01a7 fed2 1504 9b00 1112
    0x00002e0: 0f1d 1504 03b8 0051 11ff ff36 0412 0f11
    0x00002f0: 0085 b800 1519 0f2b b600 8812 0f11 0086
    0x0000300: b800 1519 0f19 10b6 008c 120f 1100 87b8
    0x0000310: 0015 190f 1911 b600 9012 0f11 0088 b800
    0x0000320: 1519 0f19 12b6 0093 120f 1100 89b8 0015
    0x0000330: 190f 1913 b600 9612 0f11 008a b800 1519
    0x0000340: 0f19 14b6 0099 120f 1100 8bb8 0015 190f
    0x0000350: 1915 b600 9c12 0f11 008c b800 1519 0f19
    0x0000360: 16b6 00a0 120f 1100 8db8 0015 190f 1917
    0x0000370: b600 a312 0f11 008e b800 1519 0f19 18b6
    0x0000380: 00a6 120f 1100 8fb8 0015 190f 1919 b600
    0x0000390: a912 0f11 0090 b800 1519 0fb0          
  Stackmap Table:
    full_frame(@425,{Object[#2],Object[#71],Object[#71],Object[#73],Object[#207],Object[#235],Object[#221],Object[#71],Object[#34],Object[#71],Object[#71],Object[#71],Object[#73],Object[#66],Object[#75],Object[#77],Object[#77],Object[#77],Object[#77],Object[#77],Object[#73],Object[#77],Object[#77],Object[#77],Integer},{})
    chop_frame(@757,1)

	at data.GetStockDataTest.getStockData_nameTest(GetStockDataTest.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:119)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)

