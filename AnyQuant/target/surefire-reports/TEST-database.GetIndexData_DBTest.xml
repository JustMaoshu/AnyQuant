<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="2" failures="0" name="database.GetIndexData_DBTest" time="0.004" errors="2" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/local/jdk1.8.0_91/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.91-b14"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="CN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/song/program/java/AnyQuant"/>
    <property name="java.runtime.version" value="1.8.0_91-b14"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="basedir" value="/home/song/program/java/AnyQuant"/>
    <property name="java.endorsed.dirs" value="/usr/local/jdk1.8.0_91/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="surefire.real.class.path" value="/home/song/program/java/AnyQuant/target/surefire/surefirebooter2802176879937855724.jar"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/opt/idea-IU-145.597.3/bin::/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="surefire.test.class.path" value="/home/song/program/java/AnyQuant/target/test-classes:/home/song/program/java/AnyQuant/target/generated-classes/cobertura:/home/song/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/home/song/.m2/repository/net/sf/json-lib/json-lib/2.3/json-lib-2.3-jdk15.jar:/home/song/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/song/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/song/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/song/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/song/.m2/repository/net/sf/ezmorph/ezmorph/1.0.6/ezmorph-1.0.6.jar:/home/song/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar:/home/song/.m2/repository/org/jfree/jfreechart/1.0.19/jfreechart-1.0.19.jar:/home/song/.m2/repository/org/jfree/jcommon/1.0.23/jcommon-1.0.23.jar:/home/song/.m2/repository/javax/servlet/servlet-api/3.0-alpha-1/servlet-api-3.0-alpha-1.jar:/home/song/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/song/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/song/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/song/.m2/repository/net/sourceforge/cobertura/cobertura/1.9.4.1/cobertura-1.9.4.1.jar:/home/song/.m2/repository/org/apache/ant/ant/1.7.0/ant-1.7.0.jar:/home/song/.m2/repository/org/apache/ant/ant-launcher/1.7.0/ant-launcher-1.7.0.jar:"/>
    <property name="sun.awt.enableExtraMouseButtons" value="true"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.4.0-21-generic"/>
    <property name="user.home" value="/home/song"/>
    <property name="user.timezone" value=""/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="user.name" value="song"/>
    <property name="java.class.path" value="/home/song/program/java/AnyQuant/target/test-classes:/home/song/program/java/AnyQuant/target/generated-classes/cobertura:/home/song/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:/home/song/.m2/repository/net/sf/json-lib/json-lib/2.3/json-lib-2.3-jdk15.jar:/home/song/.m2/repository/commons-beanutils/commons-beanutils/1.8.0/commons-beanutils-1.8.0.jar:/home/song/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/home/song/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar:/home/song/.m2/repository/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/home/song/.m2/repository/net/sf/ezmorph/ezmorph/1.0.6/ezmorph-1.0.6.jar:/home/song/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar:/home/song/.m2/repository/org/jfree/jfreechart/1.0.19/jfreechart-1.0.19.jar:/home/song/.m2/repository/org/jfree/jcommon/1.0.23/jcommon-1.0.23.jar:/home/song/.m2/repository/javax/servlet/servlet-api/3.0-alpha-1/servlet-api-3.0-alpha-1.jar:/home/song/.m2/repository/javax/javaee-api/7.0/javaee-api-7.0.jar:/home/song/.m2/repository/com/sun/mail/javax.mail/1.5.0/javax.mail-1.5.0.jar:/home/song/.m2/repository/javax/activation/activation/1.1/activation-1.1.jar:/home/song/.m2/repository/net/sourceforge/cobertura/cobertura/1.9.4.1/cobertura-1.9.4.1.jar:/home/song/.m2/repository/org/apache/ant/ant/1.7.0/ant-1.7.0.jar:/home/song/.m2/repository/org/apache/ant/ant-launcher/1.7.0/ant-launcher-1.7.0.jar:"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/local/jdk1.8.0_91/jre"/>
    <property name="sun.java.command" value="/home/song/program/java/AnyQuant/target/surefire/surefirebooter2802176879937855724.jar /home/song/program/java/AnyQuant/target/surefire/surefire7546399126161845952tmp /home/song/program/java/AnyQuant/target/surefire/surefire5068658301462894583tmp"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="zh"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_91"/>
    <property name="java.ext.dirs" value="/usr/local/jdk1.8.0_91/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.boot.class.path" value="/usr/local/jdk1.8.0_91/jre/lib/resources.jar:/usr/local/jdk1.8.0_91/jre/lib/rt.jar:/usr/local/jdk1.8.0_91/jre/lib/sunrsasign.jar:/usr/local/jdk1.8.0_91/jre/lib/jsse.jar:/usr/local/jdk1.8.0_91/jre/lib/jce.jar:/usr/local/jdk1.8.0_91/jre/lib/charsets.jar:/usr/local/jdk1.8.0_91/jre/lib/jfr.jar:/usr/local/jdk1.8.0_91/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="localRepository" value="/home/song/.m2/repository"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.font.fontmanager" value="sun.awt.X11FontManager"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="database.GetIndexData_DBTest" name="getLatestIndexDataTest" time="0.001">
    <error message="Expecting a stackmap frame at branch target 194
Exception Details:
  Location:
    database/GetIndexData_DB.getIndexDataBetween(Ljava/lang/String;Ljava/lang/String;)Lpo/IndexPO; @48: if_icmpeq
  Reason:
    Expected stackmap frame at this location.
  Bytecode:
    0x0000000: 033e 11ff ff36 0412 0b11 0019 b800 11bb
    0x0000010: 001e 59b7 001f 3a05 120b 1100 1ab8 0011
    0x0000020: 2b07 b600 2510 2d11 001a 3e11 0000 3604
    0x0000030: 9f00 921d 1100 1aa0 0019 1504 1100 00a0
    0x0000040: 0011 120b 1d15 0404 b800 2911 ffff 3604
    0x0000050: 120b 1100 1bb8 0011 bb00 2b59 b700 2c2b
    0x0000060: 0307 b600 30b6 0034 1236 b600 342b 0710
    0x0000070: 06b6 0030 b600 3412 36b6 0034 2b10 06b6
    0x0000080: 0039 b600 34b6 003d 4c12 0b11 001c b800
    0x0000090: 11bb 002b 59b7 002c 2c03 07b6 0030 b600
    0x00000a0: 3412 36b6 0034 2c07 1006 b600 30b6 0034
    0x00000b0: 1236 b600 342c 1006 b600 39b6 0034 b600
    0x00000c0: 3d4d 1504 9b00 1112 0b1d 1504 03b8 0029
    0x00000d0: 11ff ff36 0412 0b11 001f b800 11bb 003f
    0x00000e0: 59b7 0040 3a06 120b 1100 20b8 0011 1242
    0x00000f0: 3a07 120b 1100 21b8 0011 1906 1907 b600
    0x0000100: 463a 0812 0b11 0023 b800 1103 3609 120b
    0x0000110: 1100 24b8 0011 013a 0a15 049b 0011 120b
    0x0000120: 1d15 0403 b800 2911 ffff 3604 120b 1100
    0x0000130: 26b8 0011 1908 b900 4e01 0011 0026 3e11
    0x0000140: 0000 3604 9900 e71d 1100 26a0 0019 1504
    0x0000150: 1100 00a0 0011 120b 1d15 0404 b800 2911
    0x0000160: ffff 3604 120b 1100 27b8 0011 1905 2b19
    0x0000170: 0810 06b9 0051 0200 b600 5511 0027 3e11
    0x0000180: 0000 3604 9aff 9512 0b1d 1504 04b8 0029
    0x0000190: 11ff ff36 0419 0519 0810 06b9 0051 0200
    0x00001a0: 2cb6 0055 1100 273e 1100 0136 049a ff6c
    0x00001b0: 120b 1d15 0404 b800 2911 ffff 3604 1908
    0x00001c0: 0512 0b11 0028 b800 11b9 0059 0200 0994
    0x00001d0: 1100 283e 1100 0036 0499 ff40 120b 1d15
    0x00001e0: 0404 b800 2911 ffff 3604 1908 06b9 005d
    0x00001f0: 0200 0e97 1100 283e 1100 0136 0499 ff1c
    0x0000200: 1d11 0028 a000 1915 0411 0001 a000 1112
    0x0000210: 0b1d 1504 04b8 0029 11ff ff36 0412 0b11
    0x0000220: 0029 b800 1184 0901 a7fe f115 049b 0011
    0x0000230: 120b 1d15 0403 b800 2911 ffff 3604 120b
    0x0000240: 1100 2cb8 0011 1908 b900 6001 0012 0b11
    0x0000250: 002d b800 11bb 004a 5915 09b7 0063 3a0a
    0x0000260: 120b 1100 2eb8 0011 1509 bc0b 3a0b 120b
    0x0000270: 1100 2fb8 0011 1509 bc07 3a0c 120b 1100
    0x0000280: 30b8 0011 1509 bc07 3a0d 120b 1100 31b8
    0x0000290: 0011 1509 bc07 3a0e 120b 1100 32b8 0011
    0x00002a0: 1509 bc07 3a0f 120b 1100 33b8 0011 1509
    0x00002b0: bc07 3a10 120b 1100 34b8 0011 1509 bd00
    0x00002c0: 213a 1112 0b11 0035 b800 1115 09bc 073a
    0x00002d0: 1212 0b11 0036 b800 1115 09bc 073a 1312
    0x00002e0: 0b11 0038 b800 1103 3614 1504 9b00 1112
    0x00002f0: 0b1d 1504 03b8 0029 11ff ff36 0412 0b11
    0x0000300: 0039 b800 1119 08b9 004e 0100 1100 393e
    0x0000310: 1100 0036 0499 01f9 1d11 0039 a000 1915
    0x0000320: 0411 0000 a000 1112 0b1d 1504 04b8 0029
    0x0000330: 11ff ff36 0412 0b11 003a b800 1119 052b
    0x0000340: 1908 1006 b900 5102 00b6 0055 1100 3a3e
    0x0000350: 1100 0036 049a 0166 120b 1d15 0404 b800
    0x0000360: 2911 ffff 3604 1905 1908 1006 b900 5102
    0x0000370: 002c b600 5511 003a 3e11 0001 3604 9a01
    0x0000380: 3d12 0b1d 1504 04b8 0029 11ff ff36 0419
    0x0000390: 0805 120b 1100 3bb8 0011 b900 5902 0009
    0x00003a0: 9411 003b 3e11 0000 3604 9901 1112 0b1d
    0x00003b0: 1504 04b8 0029 11ff ff36 0419 0806 b900
    0x00003c0: 5d02 000e 9711 003b 3e11 0001 3604 9900
    0x00003d0: ed1d 1100 3ba0 0019 1504 1100 01a0 0011
    0x00003e0: 120b 1d15 0404 b800 2911 ffff 3604 120b
    0x00003f0: 1100 3cb8 0011 190b 1514 1908 05b9 0059
    0x0000400: 0200 5012 0b11 003d b800 1119 0c15 1419
    0x0000410: 0806 b900 5d02 0052 120b 1100 3eb8 0011
    0x0000420: 190d 1514 1908 07b9 005d 0200 5212 0b11
    0x0000430: 003f b800 1119 0e15 1419 0808 b900 5d02
    0x0000440: 0052 120b 1100 40b8 0011 1911 1514 1908
    0x0000450: 1006 b900 5102 0053 120b 1100 41b8 0011
    0x0000460: 190f 1514 1908 1007 b900 5d02 0052 120b
    0x0000470: 1100 42b8 0011 1910 1514 1908 1008 b900
    0x0000480: 5d02 0052 120b 1100 43b8 0011 1912 1514
    0x0000490: 1908 1009 b900 5d02 0052 120b 1100 44b8
    0x00004a0: 0011 1913 1514 1908 100a b900 5d02 0052
    0x00004b0: 120b 1100 45b8 0011 8414 0115 049b 0011
    0x00004c0: 120b 1d15 0403 b800 2911 ffff 3604 120b
    0x00004d0: 1100 47b8 0011 1514 1509 1100 473e 1100
    0x00004e0: 0036 04a0 fe07 1d11 0047 a000 1915 0411
    0x00004f0: 0000 a000 1112 0b1d 1504 04b8 0029 11ff
    0x0000500: ff36 0412 0b11 0048 b800 11a7 0003 1504
    0x0000510: 9b00 1112 0b1d 1504 03b8 0029 11ff ff36
    0x0000520: 0412 0b11 004b b800 1119 0a19 0bb6 006d
    0x0000530: 120b 1100 4cb8 0011 190a 190c b600 7112
    0x0000540: 0b11 004d b800 1119 0a19 0db6 0074 120b
    0x0000550: 1100 4eb8 0011 190a 190e b600 7712 0b11
    0x0000560: 004f b800 1119 0a19 11b6 007b 120b 1100
    0x0000570: 50b8 0011 190a 190f b600 7e12 0b11 0051
    0x0000580: b800 1119 0a19 10b6 0081 120b 1100 52b8
    0x0000590: 0011 190a 1912 b600 8412 0b11 0053 b800
    0x00005a0: 1119 0a19 13b6 0087 120b 1100 54b8 0011
    0x00005b0: 190a 1289 b600 8d12 0b11 0057 b800 11a7
    0x00005c0: 001a 120b 1100 55b8 0011 3a0b 120b 1100
    0x00005d0: 56b8 0011 190b b600 9012 0b11 0059 b800
    0x00005e0: 1119 0ab0                              
  Exception Handler Table:
    bci [281, 1463] =&gt; handler: 1474
  Stackmap Table:
    append_frame(@221,Object[#30])
    full_frame(@308,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74]},{})
    same_frame_extended(@582)
    full_frame(@773,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74],Object[#101],Object[#103],Object[#103],Object[#103],Object[#103],Object[#103],Object[#105],Object[#103],Object[#103],Integer},{})
    same_frame_extended(@1238)
    same_frame_extended(@1321)
    full_frame(@1482,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74]},{Object[#28]})
    same_frame(@1505)
" type="java.lang.VerifyError">java.lang.VerifyError: Expecting a stackmap frame at branch target 194
Exception Details:
  Location:
    database/GetIndexData_DB.getIndexDataBetween(Ljava/lang/String;Ljava/lang/String;)Lpo/IndexPO; @48: if_icmpeq
  Reason:
    Expected stackmap frame at this location.
  Bytecode:
    0x0000000: 033e 11ff ff36 0412 0b11 0019 b800 11bb
    0x0000010: 001e 59b7 001f 3a05 120b 1100 1ab8 0011
    0x0000020: 2b07 b600 2510 2d11 001a 3e11 0000 3604
    0x0000030: 9f00 921d 1100 1aa0 0019 1504 1100 00a0
    0x0000040: 0011 120b 1d15 0404 b800 2911 ffff 3604
    0x0000050: 120b 1100 1bb8 0011 bb00 2b59 b700 2c2b
    0x0000060: 0307 b600 30b6 0034 1236 b600 342b 0710
    0x0000070: 06b6 0030 b600 3412 36b6 0034 2b10 06b6
    0x0000080: 0039 b600 34b6 003d 4c12 0b11 001c b800
    0x0000090: 11bb 002b 59b7 002c 2c03 07b6 0030 b600
    0x00000a0: 3412 36b6 0034 2c07 1006 b600 30b6 0034
    0x00000b0: 1236 b600 342c 1006 b600 39b6 0034 b600
    0x00000c0: 3d4d 1504 9b00 1112 0b1d 1504 03b8 0029
    0x00000d0: 11ff ff36 0412 0b11 001f b800 11bb 003f
    0x00000e0: 59b7 0040 3a06 120b 1100 20b8 0011 1242
    0x00000f0: 3a07 120b 1100 21b8 0011 1906 1907 b600
    0x0000100: 463a 0812 0b11 0023 b800 1103 3609 120b
    0x0000110: 1100 24b8 0011 013a 0a15 049b 0011 120b
    0x0000120: 1d15 0403 b800 2911 ffff 3604 120b 1100
    0x0000130: 26b8 0011 1908 b900 4e01 0011 0026 3e11
    0x0000140: 0000 3604 9900 e71d 1100 26a0 0019 1504
    0x0000150: 1100 00a0 0011 120b 1d15 0404 b800 2911
    0x0000160: ffff 3604 120b 1100 27b8 0011 1905 2b19
    0x0000170: 0810 06b9 0051 0200 b600 5511 0027 3e11
    0x0000180: 0000 3604 9aff 9512 0b1d 1504 04b8 0029
    0x0000190: 11ff ff36 0419 0519 0810 06b9 0051 0200
    0x00001a0: 2cb6 0055 1100 273e 1100 0136 049a ff6c
    0x00001b0: 120b 1d15 0404 b800 2911 ffff 3604 1908
    0x00001c0: 0512 0b11 0028 b800 11b9 0059 0200 0994
    0x00001d0: 1100 283e 1100 0036 0499 ff40 120b 1d15
    0x00001e0: 0404 b800 2911 ffff 3604 1908 06b9 005d
    0x00001f0: 0200 0e97 1100 283e 1100 0136 0499 ff1c
    0x0000200: 1d11 0028 a000 1915 0411 0001 a000 1112
    0x0000210: 0b1d 1504 04b8 0029 11ff ff36 0412 0b11
    0x0000220: 0029 b800 1184 0901 a7fe f115 049b 0011
    0x0000230: 120b 1d15 0403 b800 2911 ffff 3604 120b
    0x0000240: 1100 2cb8 0011 1908 b900 6001 0012 0b11
    0x0000250: 002d b800 11bb 004a 5915 09b7 0063 3a0a
    0x0000260: 120b 1100 2eb8 0011 1509 bc0b 3a0b 120b
    0x0000270: 1100 2fb8 0011 1509 bc07 3a0c 120b 1100
    0x0000280: 30b8 0011 1509 bc07 3a0d 120b 1100 31b8
    0x0000290: 0011 1509 bc07 3a0e 120b 1100 32b8 0011
    0x00002a0: 1509 bc07 3a0f 120b 1100 33b8 0011 1509
    0x00002b0: bc07 3a10 120b 1100 34b8 0011 1509 bd00
    0x00002c0: 213a 1112 0b11 0035 b800 1115 09bc 073a
    0x00002d0: 1212 0b11 0036 b800 1115 09bc 073a 1312
    0x00002e0: 0b11 0038 b800 1103 3614 1504 9b00 1112
    0x00002f0: 0b1d 1504 03b8 0029 11ff ff36 0412 0b11
    0x0000300: 0039 b800 1119 08b9 004e 0100 1100 393e
    0x0000310: 1100 0036 0499 01f9 1d11 0039 a000 1915
    0x0000320: 0411 0000 a000 1112 0b1d 1504 04b8 0029
    0x0000330: 11ff ff36 0412 0b11 003a b800 1119 052b
    0x0000340: 1908 1006 b900 5102 00b6 0055 1100 3a3e
    0x0000350: 1100 0036 049a 0166 120b 1d15 0404 b800
    0x0000360: 2911 ffff 3604 1905 1908 1006 b900 5102
    0x0000370: 002c b600 5511 003a 3e11 0001 3604 9a01
    0x0000380: 3d12 0b1d 1504 04b8 0029 11ff ff36 0419
    0x0000390: 0805 120b 1100 3bb8 0011 b900 5902 0009
    0x00003a0: 9411 003b 3e11 0000 3604 9901 1112 0b1d
    0x00003b0: 1504 04b8 0029 11ff ff36 0419 0806 b900
    0x00003c0: 5d02 000e 9711 003b 3e11 0001 3604 9900
    0x00003d0: ed1d 1100 3ba0 0019 1504 1100 01a0 0011
    0x00003e0: 120b 1d15 0404 b800 2911 ffff 3604 120b
    0x00003f0: 1100 3cb8 0011 190b 1514 1908 05b9 0059
    0x0000400: 0200 5012 0b11 003d b800 1119 0c15 1419
    0x0000410: 0806 b900 5d02 0052 120b 1100 3eb8 0011
    0x0000420: 190d 1514 1908 07b9 005d 0200 5212 0b11
    0x0000430: 003f b800 1119 0e15 1419 0808 b900 5d02
    0x0000440: 0052 120b 1100 40b8 0011 1911 1514 1908
    0x0000450: 1006 b900 5102 0053 120b 1100 41b8 0011
    0x0000460: 190f 1514 1908 1007 b900 5d02 0052 120b
    0x0000470: 1100 42b8 0011 1910 1514 1908 1008 b900
    0x0000480: 5d02 0052 120b 1100 43b8 0011 1912 1514
    0x0000490: 1908 1009 b900 5d02 0052 120b 1100 44b8
    0x00004a0: 0011 1913 1514 1908 100a b900 5d02 0052
    0x00004b0: 120b 1100 45b8 0011 8414 0115 049b 0011
    0x00004c0: 120b 1d15 0403 b800 2911 ffff 3604 120b
    0x00004d0: 1100 47b8 0011 1514 1509 1100 473e 1100
    0x00004e0: 0036 04a0 fe07 1d11 0047 a000 1915 0411
    0x00004f0: 0000 a000 1112 0b1d 1504 04b8 0029 11ff
    0x0000500: ff36 0412 0b11 0048 b800 11a7 0003 1504
    0x0000510: 9b00 1112 0b1d 1504 03b8 0029 11ff ff36
    0x0000520: 0412 0b11 004b b800 1119 0a19 0bb6 006d
    0x0000530: 120b 1100 4cb8 0011 190a 190c b600 7112
    0x0000540: 0b11 004d b800 1119 0a19 0db6 0074 120b
    0x0000550: 1100 4eb8 0011 190a 190e b600 7712 0b11
    0x0000560: 004f b800 1119 0a19 11b6 007b 120b 1100
    0x0000570: 50b8 0011 190a 190f b600 7e12 0b11 0051
    0x0000580: b800 1119 0a19 10b6 0081 120b 1100 52b8
    0x0000590: 0011 190a 1912 b600 8412 0b11 0053 b800
    0x00005a0: 1119 0a19 13b6 0087 120b 1100 54b8 0011
    0x00005b0: 190a 1289 b600 8d12 0b11 0057 b800 11a7
    0x00005c0: 001a 120b 1100 55b8 0011 3a0b 120b 1100
    0x00005d0: 56b8 0011 190b b600 9012 0b11 0059 b800
    0x00005e0: 1119 0ab0                              
  Exception Handler Table:
    bci [281, 1463] =&gt; handler: 1474
  Stackmap Table:
    append_frame(@221,Object[#30])
    full_frame(@308,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74]},{})
    same_frame_extended(@582)
    full_frame(@773,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74],Object[#101],Object[#103],Object[#103],Object[#103],Object[#103],Object[#103],Object[#105],Object[#103],Object[#103],Integer},{})
    same_frame_extended(@1238)
    same_frame_extended(@1321)
    full_frame(@1482,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74]},{Object[#28]})
    same_frame(@1505)

	at database.GetIndexData_DBTest.getLatestIndexDataTest(GetIndexData_DBTest.java:30)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:119)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
</error>
    <system-out>@SLTests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.007 sec &lt;&lt;&lt; FAILURE!
@SLRunning database.GetIndexData_DBTest
</system-out>
  </testcase>
  <testcase classname="database.GetIndexData_DBTest" name="getIndexDataBetweenTest" time="0.001">
    <error message="Expecting a stackmap frame at branch target 194
Exception Details:
  Location:
    database/GetIndexData_DB.getIndexDataBetween(Ljava/lang/String;Ljava/lang/String;)Lpo/IndexPO; @48: if_icmpeq
  Reason:
    Expected stackmap frame at this location.
  Bytecode:
    0x0000000: 033e 11ff ff36 0412 0b11 0019 b800 11bb
    0x0000010: 001e 59b7 001f 3a05 120b 1100 1ab8 0011
    0x0000020: 2b07 b600 2510 2d11 001a 3e11 0000 3604
    0x0000030: 9f00 921d 1100 1aa0 0019 1504 1100 00a0
    0x0000040: 0011 120b 1d15 0404 b800 2911 ffff 3604
    0x0000050: 120b 1100 1bb8 0011 bb00 2b59 b700 2c2b
    0x0000060: 0307 b600 30b6 0034 1236 b600 342b 0710
    0x0000070: 06b6 0030 b600 3412 36b6 0034 2b10 06b6
    0x0000080: 0039 b600 34b6 003d 4c12 0b11 001c b800
    0x0000090: 11bb 002b 59b7 002c 2c03 07b6 0030 b600
    0x00000a0: 3412 36b6 0034 2c07 1006 b600 30b6 0034
    0x00000b0: 1236 b600 342c 1006 b600 39b6 0034 b600
    0x00000c0: 3d4d 1504 9b00 1112 0b1d 1504 03b8 0029
    0x00000d0: 11ff ff36 0412 0b11 001f b800 11bb 003f
    0x00000e0: 59b7 0040 3a06 120b 1100 20b8 0011 1242
    0x00000f0: 3a07 120b 1100 21b8 0011 1906 1907 b600
    0x0000100: 463a 0812 0b11 0023 b800 1103 3609 120b
    0x0000110: 1100 24b8 0011 013a 0a15 049b 0011 120b
    0x0000120: 1d15 0403 b800 2911 ffff 3604 120b 1100
    0x0000130: 26b8 0011 1908 b900 4e01 0011 0026 3e11
    0x0000140: 0000 3604 9900 e71d 1100 26a0 0019 1504
    0x0000150: 1100 00a0 0011 120b 1d15 0404 b800 2911
    0x0000160: ffff 3604 120b 1100 27b8 0011 1905 2b19
    0x0000170: 0810 06b9 0051 0200 b600 5511 0027 3e11
    0x0000180: 0000 3604 9aff 9512 0b1d 1504 04b8 0029
    0x0000190: 11ff ff36 0419 0519 0810 06b9 0051 0200
    0x00001a0: 2cb6 0055 1100 273e 1100 0136 049a ff6c
    0x00001b0: 120b 1d15 0404 b800 2911 ffff 3604 1908
    0x00001c0: 0512 0b11 0028 b800 11b9 0059 0200 0994
    0x00001d0: 1100 283e 1100 0036 0499 ff40 120b 1d15
    0x00001e0: 0404 b800 2911 ffff 3604 1908 06b9 005d
    0x00001f0: 0200 0e97 1100 283e 1100 0136 0499 ff1c
    0x0000200: 1d11 0028 a000 1915 0411 0001 a000 1112
    0x0000210: 0b1d 1504 04b8 0029 11ff ff36 0412 0b11
    0x0000220: 0029 b800 1184 0901 a7fe f115 049b 0011
    0x0000230: 120b 1d15 0403 b800 2911 ffff 3604 120b
    0x0000240: 1100 2cb8 0011 1908 b900 6001 0012 0b11
    0x0000250: 002d b800 11bb 004a 5915 09b7 0063 3a0a
    0x0000260: 120b 1100 2eb8 0011 1509 bc0b 3a0b 120b
    0x0000270: 1100 2fb8 0011 1509 bc07 3a0c 120b 1100
    0x0000280: 30b8 0011 1509 bc07 3a0d 120b 1100 31b8
    0x0000290: 0011 1509 bc07 3a0e 120b 1100 32b8 0011
    0x00002a0: 1509 bc07 3a0f 120b 1100 33b8 0011 1509
    0x00002b0: bc07 3a10 120b 1100 34b8 0011 1509 bd00
    0x00002c0: 213a 1112 0b11 0035 b800 1115 09bc 073a
    0x00002d0: 1212 0b11 0036 b800 1115 09bc 073a 1312
    0x00002e0: 0b11 0038 b800 1103 3614 1504 9b00 1112
    0x00002f0: 0b1d 1504 03b8 0029 11ff ff36 0412 0b11
    0x0000300: 0039 b800 1119 08b9 004e 0100 1100 393e
    0x0000310: 1100 0036 0499 01f9 1d11 0039 a000 1915
    0x0000320: 0411 0000 a000 1112 0b1d 1504 04b8 0029
    0x0000330: 11ff ff36 0412 0b11 003a b800 1119 052b
    0x0000340: 1908 1006 b900 5102 00b6 0055 1100 3a3e
    0x0000350: 1100 0036 049a 0166 120b 1d15 0404 b800
    0x0000360: 2911 ffff 3604 1905 1908 1006 b900 5102
    0x0000370: 002c b600 5511 003a 3e11 0001 3604 9a01
    0x0000380: 3d12 0b1d 1504 04b8 0029 11ff ff36 0419
    0x0000390: 0805 120b 1100 3bb8 0011 b900 5902 0009
    0x00003a0: 9411 003b 3e11 0000 3604 9901 1112 0b1d
    0x00003b0: 1504 04b8 0029 11ff ff36 0419 0806 b900
    0x00003c0: 5d02 000e 9711 003b 3e11 0001 3604 9900
    0x00003d0: ed1d 1100 3ba0 0019 1504 1100 01a0 0011
    0x00003e0: 120b 1d15 0404 b800 2911 ffff 3604 120b
    0x00003f0: 1100 3cb8 0011 190b 1514 1908 05b9 0059
    0x0000400: 0200 5012 0b11 003d b800 1119 0c15 1419
    0x0000410: 0806 b900 5d02 0052 120b 1100 3eb8 0011
    0x0000420: 190d 1514 1908 07b9 005d 0200 5212 0b11
    0x0000430: 003f b800 1119 0e15 1419 0808 b900 5d02
    0x0000440: 0052 120b 1100 40b8 0011 1911 1514 1908
    0x0000450: 1006 b900 5102 0053 120b 1100 41b8 0011
    0x0000460: 190f 1514 1908 1007 b900 5d02 0052 120b
    0x0000470: 1100 42b8 0011 1910 1514 1908 1008 b900
    0x0000480: 5d02 0052 120b 1100 43b8 0011 1912 1514
    0x0000490: 1908 1009 b900 5d02 0052 120b 1100 44b8
    0x00004a0: 0011 1913 1514 1908 100a b900 5d02 0052
    0x00004b0: 120b 1100 45b8 0011 8414 0115 049b 0011
    0x00004c0: 120b 1d15 0403 b800 2911 ffff 3604 120b
    0x00004d0: 1100 47b8 0011 1514 1509 1100 473e 1100
    0x00004e0: 0036 04a0 fe07 1d11 0047 a000 1915 0411
    0x00004f0: 0000 a000 1112 0b1d 1504 04b8 0029 11ff
    0x0000500: ff36 0412 0b11 0048 b800 11a7 0003 1504
    0x0000510: 9b00 1112 0b1d 1504 03b8 0029 11ff ff36
    0x0000520: 0412 0b11 004b b800 1119 0a19 0bb6 006d
    0x0000530: 120b 1100 4cb8 0011 190a 190c b600 7112
    0x0000540: 0b11 004d b800 1119 0a19 0db6 0074 120b
    0x0000550: 1100 4eb8 0011 190a 190e b600 7712 0b11
    0x0000560: 004f b800 1119 0a19 11b6 007b 120b 1100
    0x0000570: 50b8 0011 190a 190f b600 7e12 0b11 0051
    0x0000580: b800 1119 0a19 10b6 0081 120b 1100 52b8
    0x0000590: 0011 190a 1912 b600 8412 0b11 0053 b800
    0x00005a0: 1119 0a19 13b6 0087 120b 1100 54b8 0011
    0x00005b0: 190a 1289 b600 8d12 0b11 0057 b800 11a7
    0x00005c0: 001a 120b 1100 55b8 0011 3a0b 120b 1100
    0x00005d0: 56b8 0011 190b b600 9012 0b11 0059 b800
    0x00005e0: 1119 0ab0                              
  Exception Handler Table:
    bci [281, 1463] =&gt; handler: 1474
  Stackmap Table:
    append_frame(@221,Object[#30])
    full_frame(@308,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74]},{})
    same_frame_extended(@582)
    full_frame(@773,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74],Object[#101],Object[#103],Object[#103],Object[#103],Object[#103],Object[#103],Object[#105],Object[#103],Object[#103],Integer},{})
    same_frame_extended(@1238)
    same_frame_extended(@1321)
    full_frame(@1482,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74]},{Object[#28]})
    same_frame(@1505)
" type="java.lang.VerifyError">java.lang.VerifyError: Expecting a stackmap frame at branch target 194
Exception Details:
  Location:
    database/GetIndexData_DB.getIndexDataBetween(Ljava/lang/String;Ljava/lang/String;)Lpo/IndexPO; @48: if_icmpeq
  Reason:
    Expected stackmap frame at this location.
  Bytecode:
    0x0000000: 033e 11ff ff36 0412 0b11 0019 b800 11bb
    0x0000010: 001e 59b7 001f 3a05 120b 1100 1ab8 0011
    0x0000020: 2b07 b600 2510 2d11 001a 3e11 0000 3604
    0x0000030: 9f00 921d 1100 1aa0 0019 1504 1100 00a0
    0x0000040: 0011 120b 1d15 0404 b800 2911 ffff 3604
    0x0000050: 120b 1100 1bb8 0011 bb00 2b59 b700 2c2b
    0x0000060: 0307 b600 30b6 0034 1236 b600 342b 0710
    0x0000070: 06b6 0030 b600 3412 36b6 0034 2b10 06b6
    0x0000080: 0039 b600 34b6 003d 4c12 0b11 001c b800
    0x0000090: 11bb 002b 59b7 002c 2c03 07b6 0030 b600
    0x00000a0: 3412 36b6 0034 2c07 1006 b600 30b6 0034
    0x00000b0: 1236 b600 342c 1006 b600 39b6 0034 b600
    0x00000c0: 3d4d 1504 9b00 1112 0b1d 1504 03b8 0029
    0x00000d0: 11ff ff36 0412 0b11 001f b800 11bb 003f
    0x00000e0: 59b7 0040 3a06 120b 1100 20b8 0011 1242
    0x00000f0: 3a07 120b 1100 21b8 0011 1906 1907 b600
    0x0000100: 463a 0812 0b11 0023 b800 1103 3609 120b
    0x0000110: 1100 24b8 0011 013a 0a15 049b 0011 120b
    0x0000120: 1d15 0403 b800 2911 ffff 3604 120b 1100
    0x0000130: 26b8 0011 1908 b900 4e01 0011 0026 3e11
    0x0000140: 0000 3604 9900 e71d 1100 26a0 0019 1504
    0x0000150: 1100 00a0 0011 120b 1d15 0404 b800 2911
    0x0000160: ffff 3604 120b 1100 27b8 0011 1905 2b19
    0x0000170: 0810 06b9 0051 0200 b600 5511 0027 3e11
    0x0000180: 0000 3604 9aff 9512 0b1d 1504 04b8 0029
    0x0000190: 11ff ff36 0419 0519 0810 06b9 0051 0200
    0x00001a0: 2cb6 0055 1100 273e 1100 0136 049a ff6c
    0x00001b0: 120b 1d15 0404 b800 2911 ffff 3604 1908
    0x00001c0: 0512 0b11 0028 b800 11b9 0059 0200 0994
    0x00001d0: 1100 283e 1100 0036 0499 ff40 120b 1d15
    0x00001e0: 0404 b800 2911 ffff 3604 1908 06b9 005d
    0x00001f0: 0200 0e97 1100 283e 1100 0136 0499 ff1c
    0x0000200: 1d11 0028 a000 1915 0411 0001 a000 1112
    0x0000210: 0b1d 1504 04b8 0029 11ff ff36 0412 0b11
    0x0000220: 0029 b800 1184 0901 a7fe f115 049b 0011
    0x0000230: 120b 1d15 0403 b800 2911 ffff 3604 120b
    0x0000240: 1100 2cb8 0011 1908 b900 6001 0012 0b11
    0x0000250: 002d b800 11bb 004a 5915 09b7 0063 3a0a
    0x0000260: 120b 1100 2eb8 0011 1509 bc0b 3a0b 120b
    0x0000270: 1100 2fb8 0011 1509 bc07 3a0c 120b 1100
    0x0000280: 30b8 0011 1509 bc07 3a0d 120b 1100 31b8
    0x0000290: 0011 1509 bc07 3a0e 120b 1100 32b8 0011
    0x00002a0: 1509 bc07 3a0f 120b 1100 33b8 0011 1509
    0x00002b0: bc07 3a10 120b 1100 34b8 0011 1509 bd00
    0x00002c0: 213a 1112 0b11 0035 b800 1115 09bc 073a
    0x00002d0: 1212 0b11 0036 b800 1115 09bc 073a 1312
    0x00002e0: 0b11 0038 b800 1103 3614 1504 9b00 1112
    0x00002f0: 0b1d 1504 03b8 0029 11ff ff36 0412 0b11
    0x0000300: 0039 b800 1119 08b9 004e 0100 1100 393e
    0x0000310: 1100 0036 0499 01f9 1d11 0039 a000 1915
    0x0000320: 0411 0000 a000 1112 0b1d 1504 04b8 0029
    0x0000330: 11ff ff36 0412 0b11 003a b800 1119 052b
    0x0000340: 1908 1006 b900 5102 00b6 0055 1100 3a3e
    0x0000350: 1100 0036 049a 0166 120b 1d15 0404 b800
    0x0000360: 2911 ffff 3604 1905 1908 1006 b900 5102
    0x0000370: 002c b600 5511 003a 3e11 0001 3604 9a01
    0x0000380: 3d12 0b1d 1504 04b8 0029 11ff ff36 0419
    0x0000390: 0805 120b 1100 3bb8 0011 b900 5902 0009
    0x00003a0: 9411 003b 3e11 0000 3604 9901 1112 0b1d
    0x00003b0: 1504 04b8 0029 11ff ff36 0419 0806 b900
    0x00003c0: 5d02 000e 9711 003b 3e11 0001 3604 9900
    0x00003d0: ed1d 1100 3ba0 0019 1504 1100 01a0 0011
    0x00003e0: 120b 1d15 0404 b800 2911 ffff 3604 120b
    0x00003f0: 1100 3cb8 0011 190b 1514 1908 05b9 0059
    0x0000400: 0200 5012 0b11 003d b800 1119 0c15 1419
    0x0000410: 0806 b900 5d02 0052 120b 1100 3eb8 0011
    0x0000420: 190d 1514 1908 07b9 005d 0200 5212 0b11
    0x0000430: 003f b800 1119 0e15 1419 0808 b900 5d02
    0x0000440: 0052 120b 1100 40b8 0011 1911 1514 1908
    0x0000450: 1006 b900 5102 0053 120b 1100 41b8 0011
    0x0000460: 190f 1514 1908 1007 b900 5d02 0052 120b
    0x0000470: 1100 42b8 0011 1910 1514 1908 1008 b900
    0x0000480: 5d02 0052 120b 1100 43b8 0011 1912 1514
    0x0000490: 1908 1009 b900 5d02 0052 120b 1100 44b8
    0x00004a0: 0011 1913 1514 1908 100a b900 5d02 0052
    0x00004b0: 120b 1100 45b8 0011 8414 0115 049b 0011
    0x00004c0: 120b 1d15 0403 b800 2911 ffff 3604 120b
    0x00004d0: 1100 47b8 0011 1514 1509 1100 473e 1100
    0x00004e0: 0036 04a0 fe07 1d11 0047 a000 1915 0411
    0x00004f0: 0000 a000 1112 0b1d 1504 04b8 0029 11ff
    0x0000500: ff36 0412 0b11 0048 b800 11a7 0003 1504
    0x0000510: 9b00 1112 0b1d 1504 03b8 0029 11ff ff36
    0x0000520: 0412 0b11 004b b800 1119 0a19 0bb6 006d
    0x0000530: 120b 1100 4cb8 0011 190a 190c b600 7112
    0x0000540: 0b11 004d b800 1119 0a19 0db6 0074 120b
    0x0000550: 1100 4eb8 0011 190a 190e b600 7712 0b11
    0x0000560: 004f b800 1119 0a19 11b6 007b 120b 1100
    0x0000570: 50b8 0011 190a 190f b600 7e12 0b11 0051
    0x0000580: b800 1119 0a19 10b6 0081 120b 1100 52b8
    0x0000590: 0011 190a 1912 b600 8412 0b11 0053 b800
    0x00005a0: 1119 0a19 13b6 0087 120b 1100 54b8 0011
    0x00005b0: 190a 1289 b600 8d12 0b11 0057 b800 11a7
    0x00005c0: 001a 120b 1100 55b8 0011 3a0b 120b 1100
    0x00005d0: 56b8 0011 190b b600 9012 0b11 0059 b800
    0x00005e0: 1119 0ab0                              
  Exception Handler Table:
    bci [281, 1463] =&gt; handler: 1474
  Stackmap Table:
    append_frame(@221,Object[#30])
    full_frame(@308,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74]},{})
    same_frame_extended(@582)
    full_frame(@773,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74],Object[#101],Object[#103],Object[#103],Object[#103],Object[#103],Object[#103],Object[#105],Object[#103],Object[#103],Integer},{})
    same_frame_extended(@1238)
    same_frame_extended(@1321)
    full_frame(@1482,{Object[#2],Object[#33],Object[#33],Object[#30],Object[#63],Object[#33],Object[#72],Integer,Object[#74]},{Object[#28]})
    same_frame(@1505)

	at database.GetIndexData_DBTest.getIndexDataBetweenTest(GetIndexData_DBTest.java:14)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:53)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:119)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
</error>
  </testcase>
</testsuite>